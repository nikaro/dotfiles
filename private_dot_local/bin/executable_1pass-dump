#!/usr/bin/env python3

"""
Dump and encrypt 1password items.

Dump is done with the 1password-cli `op` and encryption is done with `age` and
a passphrase.
"""

import argparse
import json
from pathlib import Path
import subprocess
from tempfile import NamedTemporaryFile


def setup_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(description=__doc__)
    parser.add_argument("output", type=Path, help="path to output file")
    args = parser.parse_args()

    return args


def list_items() -> list:
    cmd = ["op", "item", "list", "--format", "json"]
    proc = subprocess.run(cmd, capture_output=True, check=True, text=True)
    stdout = json.loads(proc.stdout)
    items = [i["id"] for i in stdout]

    return items


def get_item(item_id: str) -> dict:
    cmd = ["op", "item", "get", item_id, "--format", "json"]
    proc = subprocess.run(cmd, capture_output=True, check=True, text=True)
    item = json.loads(proc.stdout)
    
    return item


def age_encrypt(data: str, output: Path) -> None:
    with NamedTemporaryFile() as fp:
        fp.write(str.encode(data))
        tmp_file = fp.name
        cmd = ["age", "--passphrase", "--output", str(output), tmp_file]
        subprocess.run(cmd, stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE, check=True)


def main() -> None:
    args = setup_args()
    items = [get_item(i) for i in list_items()]
    data = json.dumps(items)
    age_encrypt(data, args.output)


if __name__ == "__main__":
    main()
